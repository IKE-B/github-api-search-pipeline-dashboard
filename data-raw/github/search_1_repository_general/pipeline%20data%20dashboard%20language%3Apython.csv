name;full_name;description;fork;html_url
audiophile-e2e-pipeline;ris-tlp/audiophile-e2e-pipeline;Pipeline that extracts data from Crinacle's Headphone and InEarMonitor databases and finalizes data for a Metabase Dashboard.;false;https://github.com/ris-tlp/audiophile-e2e-pipeline
Stock-SEC-Data-Dashboard;hrshtsharma17/Stock-SEC-Data-Dashboard;This project aims to generate an ETL pipeline for SEC EDGAR system data dashboard and analysis.;false;https://github.com/hrshtsharma17/Stock-SEC-Data-Dashboard
udacity-data-eng-proj3;shravan-kuchkula/udacity-data-eng-proj3;Built a stream processing data pipeline to get data from disparate systems into a dashboard using Kafka as an intermediary. ;false;https://github.com/shravan-kuchkula/udacity-data-eng-proj3
datajoint-dashboard;datajoint/datajoint-dashboard;Developing tool to build a Plotly Dash app for a DataJoint pipeline;false;https://github.com/datajoint/datajoint-dashboard
coches-net-dashboard;franloza/coches-net-dashboard;Sample project that use Dagster, dbt, DuckDB and Dash to visualize car and motorcycle Spanish market;false;https://github.com/franloza/coches-net-dashboard
aws-data-pipeline;ismaildawoodjee/aws-data-pipeline;A batch processing data pipeline, using AWS resources (S3, EMR, Redshift, EC2, IAM), provisioned via Terraform, and orchestrated from locally hosted Airflow containers. The end product is a Superset dashboard and a Postgres database, hosted on an EC2 instance at this address (powered down):;false;https://github.com/ismaildawoodjee/aws-data-pipeline
youtube_data_analysis;Nupurgopali/youtube_data_analysis;Created an optimised pipeline to provide accurate data for analysis, then used snowsight (provided by Snowflake) to create a dashboard.;false;https://github.com/Nupurgopali/youtube_data_analysis
Prescriber-ETL-data-pipeline;judeleonard/Prescriber-ETL-data-pipeline;An End-to-End ETL data pipeline that leverages pyspark parallel processing to process about 25 million rows of data coming from a SaaS application using Apache Airflow as an orchestration tool and various data warehouse technologies and finally using Apache Superset to connect to DWH for generating BI dashboards for weekly reports ;false;https://github.com/judeleonard/Prescriber-ETL-data-pipeline
divvy-bikeshare-de-project;Fozan-Talat/divvy-bikeshare-de-project;An end-to-end data pipeline which extracts divvy bikeshare data from web loads it into data lake and datawarehouse transforms it using dbt and finally , a dashboard to visualize the data using looker studio, the pipeline is orchestrated using prefect;false;https://github.com/Fozan-Talat/divvy-bikeshare-de-project
End-to-end-data-enginnerring-project;rafik-rahoui/End-to-end-data-enginnerring-project;End-to-end ELT data engineering project ;false;https://github.com/rafik-rahoui/End-to-end-data-enginnerring-project
reddit-data-engineering;zacharyt-cs/reddit-data-engineering;An end-to-end data engineering pipeline to create a dashboard for the latest content on the r/Stocks subreddit;false;https://github.com/zacharyt-cs/reddit-data-engineering
covid-compared;jjjchens235/covid-compared;An automated data pipeline + COVID19 comparison dashboard.;false;https://github.com/jjjchens235/covid-compared
Data_Engineering_Projects;AuFeld/Data_Engineering_Projects;A collection of data engineering projects: data modeling, ETL pipelines, data lakes, infrastructure configuration on AWS, data warehousing, containerization, and a dashboard to monitor data pipeline KPIs ;false;https://github.com/AuFeld/Data_Engineering_Projects
Stock_streaming_pipeline_project;Joshua-omolewa/Stock_streaming_pipeline_project;Built a real-time streaming pipeline to extract stock data, using Apache Nifi, Debezium, Kafka, and Spark Streaming. Loaded the transformed data into Glue database and created real-time dashboards using Power BI and Tableau with Athena. The pipeline is orchestrated using Airflow.;false;https://github.com/Joshua-omolewa/Stock_streaming_pipeline_project
ETL-Mage-GCP;vinamrgrover/ETL-Mage-GCP;An ETL Pipeline built over GCP and orchestrated by Mage, which involves Extracting Data from GCS Bucket, building Dimensional Model (Star Schema), loading the Data into BigQuery and a Looker Dashboard for further analysis.;false;https://github.com/vinamrgrover/ETL-Mage-GCP
taiko-data-pipeline;aoraki-labs/taiko-data-pipeline;Code base for taiko dashboard data pipeline.;false;https://github.com/aoraki-labs/taiko-data-pipeline
Cryptocurrency-Data-Pipeline;jlskent/Cryptocurrency-Data-Pipeline;-Implemented a high performance data processing platform using Apache Kafka, Apache HBase, and Apache Spark to analyze cryptocurrency data.  -Developed a dashboard web app using Redis, Node.js and D3.  -Created a scalable cloud deployment environment using Docker.;false;https://github.com/jlskent/Cryptocurrency-Data-Pipeline
Reddit_Data_Pipeline;joyceannie/Reddit_Data_Pipeline;The purpose of the project is to create a data pipeline to extract data from Reddit API and create a dashboard to analyse the data. The data is extracted from the subreddit r/Python. The data is extracted daily and uploaded to S3 buckets, and copied to Redshift. The dashboard is created using Google Data Studio.;false;https://github.com/joyceannie/Reddit_Data_Pipeline
Tiki-Data-Analysis-V2;EdwardNgo/Tiki-Data-Analysis-V2;Pipeline for getting the tiki data to analysis some attributes and making some dashboards;false;https://github.com/EdwardNgo/Tiki-Data-Analysis-V2
NYC-Uber-Data-Engineering-Project-with-Google-Cloud-Platform;manyuzhang1996/NYC-Uber-Data-Engineering-Project-with-Google-Cloud-Platform;Deploying ETL pipeline on cloud, analyzing on BigQuery, dashboarding on Looker Studio;false;https://github.com/manyuzhang1996/NYC-Uber-Data-Engineering-Project-with-Google-Cloud-Platform
data-pipeline-demo-1;AlexandreGarito/data-pipeline-demo-1;This project is a Python-coded and GCP-hosted micro-ETL data pipeline and interactive dashboard that displays API data using the Dash-Plotly web framework, updated daily using DevOps tools such as CI/CD, Docker, and Airflow.;false;https://github.com/AlexandreGarito/data-pipeline-demo-1
Real-Time-Streaming-Data-Pipeline;gborn/Real-Time-Streaming-Data-Pipeline;Real-Time Data streaming Pipeline to process and transform live events using Kafka, Spark Streaming, Hadoop, PostgresSQL on Docker. Live event metrics were monitored using a dashboard built with Django  and javascript.;false;https://github.com/gborn/Real-Time-Streaming-Data-Pipeline
Science_report;TuanLe-BenKon/Science_report;Repo of online data pipeline and dashboard;false;https://github.com/TuanLe-BenKon/Science_report
Netflix-Movie-Recommendation-System;chenxi1103/Netflix-Movie-Recommendation-System;Developed a full-stack movie recommendation system with RESTful API to provide clients with 20 recommended movies. Determine the hit rate by collecting clientsâ€™ watching data to see if they watch the recommended movies afterwards. Continuous Integration for pipeline code. Automated daily model quality evaluation and system supervision with Jinkens. Designed and built the infrastructure that can incrementally deploy new versions of recommendation service triggered by canary release and A/B testing. Integrated with feedback loops mechanism to detect potential positive or negative feedback loops to further identify potential adversarial attacks. Implemented the monitoring and detection by applying lambda architecture to combine the stream and batch processing results to detect problematic behaviors. Comprehensive data quality control on raw data received from Kafka stream, especially focus on data schema issues, missing data, and duplicated data. Monitoring Dashboard UI with D3.js. Developed the whole web server by Flask. Containerized the whole service by Docker.;false;https://github.com/chenxi1103/Netflix-Movie-Recommendation-System
Marketing-Dashboard;Patcharanat/Marketing-Dashboard;Tools integration - Python data pipeline, SQLite database, Power BI Dashboard;false;https://github.com/Patcharanat/Marketing-Dashboard
LiveCryptocurrencyDashboard;edoardorealini/LiveCryptocurrencyDashboard;A full Big Data pipeline implemplement in Scala and Python for generating live predictions of crypos prices. Technologies: Python, Scala, Kafka, FB's Prophet, Cassandra and Plotly for final visualization. ;false;https://github.com/edoardorealini/LiveCryptocurrencyDashboard
DFA-data-pipelines;kevanhannah/DFA-data-pipelines;A project with Airflow that powers Google Looker Studio dashboards on Digital First Assessment results and active assessor participation.;false;https://github.com/kevanhannah/DFA-data-pipelines
bg-portfolio_etl_2_amazon;bg-portfolio/bg-portfolio_etl_2_amazon;Data pipeline for amazon shop, ETL, scraper, docker, python. Airflow, MongoDB, Selenium Grid, Streamlit Dashboard.;false;https://github.com/bg-portfolio/bg-portfolio_etl_2_amazon
Austin_Driver_Score_Predictor;cedoula/Austin_Driver_Score_Predictor;Used Python Scikit-Learn to analyze Austin car crash data from 2018 to 2020 and created an interactive dashboard using a Random Forest Classifier algorithm to calculate a driver score from user features.;false;https://github.com/cedoula/Austin_Driver_Score_Predictor
news-headlines;dhruvi-9/news-headlines;Pipeline that extracts data from sites for a dashboard.;false;https://github.com/dhruvi-9/news-headlines
velib_v1;kaoutaar/velib_v1;end to end data engineering project;false;https://github.com/kaoutaar/velib_v1
aws-dashboard-demogo-prime;cdrhim/aws-dashboard-demogo-prime;Data pipeline and security SIEM construction, inspired by AWS DemoGo Prime Day.;false;https://github.com/cdrhim/aws-dashboard-demogo-prime
weather_data_pipeline;James-Wachuka/weather_data_pipeline;This is a PySpark-based data pipeline that fetches weather data for a few cities, performs some basic processing and transformation on the data, and then writes the processed data to a Google Cloud Storage bucket and a BigQuery table.The data is then viewed in a looker dashboard ;false;https://github.com/James-Wachuka/weather_data_pipeline
Viagens-Dashboard;elvinmatheus/Viagens-Dashboard;Um pipeline de dados que baixa dados do Portal da TransparÃªncia e os carrega para um Data Warehouse ;false;https://github.com/elvinmatheus/Viagens-Dashboard
Reddit-ELT-Pipeline;BWalliz/Reddit-ELT-Pipeline;"The pipeline extracts data from the /r/DataEngineering API and exports a csv file to S3. The most recent file is ingested into Redshift and subsequently transformed with dbt. Airflow was used for orchestration and hosted locally with docker-compose; The output is a PowerBI dashboard that is connected to Redshift.";false;https://github.com/BWalliz/Reddit-ELT-Pipeline
Data-Streaming-Using-Kafka;ruslanmv/Data-Streaming-Using-Kafka;Built a stream processing data pipeline to get data from disparate systems into a dashboard using Kafka as an intermediary.;false;https://github.com/ruslanmv/Data-Streaming-Using-Kafka
uber-data-engineering-project;naman-raturi/uber-data-engineering-project;" Analyzed the Uber dataset, created an entire data pipeline using Google Cloud Platform (GCP), and performed ETL operations using MAGE-AI. Additionally,  developed a dynamic dashboard using LOOKER Studio. Tools &  Languages used :GCP Storage, Python, Compute Instance, Mage Data Pipeline Tool, BigQuery, and Looker Studio.";false;https://github.com/naman-raturi/uber-data-engineering-project
ADF-Databricks-Covid19;sam-url/ADF-Databricks-Covid19;This repo contains project demo for ETL pipelines and covid dashboard using ADF as orchestration tool, storage as data lake, Databricks notebook as codebase and Power BI for dashboarding purpose.;false;https://github.com/sam-url/ADF-Databricks-Covid19
Yelp-Data-Engineeering;Ezuniga13/Yelp-Data-Engineeering;Fully automated data pipeline using Python, Yelp API's, AWS RDS, s3 buckets, Docker and Streamlit to create a 3D interactive dashboard.;false;https://github.com/Ezuniga13/Yelp-Data-Engineeering
sentiment-analysis-platform;tspannhw/sentiment-analysis-platform;An all-in-one content platform (currently serving Twitter tweets). Comes complete with a sentiment analysis data pipeline, an API to query analyzed content and (in the future) a front-end dashboard.;false;https://github.com/tspannhw/sentiment-analysis-platform
gaming-nonrealtime-analytics;Azure-Samples/gaming-nonrealtime-analytics;This reference architecture represents a simple analytics pipeline that you can build on Azure. It can be leveraged when you won't be tracking data that requires real-time analysis and instead you just plan to do review sessions of the data every now and then (daily, weekly, bi-weekly, monthly). The presentation layer is a dashboard that you will be able to customize at will. You could use this while you are developing your game and in production.;false;https://github.com/Azure-Samples/gaming-nonrealtime-analytics
Docker_VPS_App;cogentdom/Docker_VPS_App;This project scrapes data of stocks and feeds them down a pipeline that trains an ML model and displays it as a dashboard using Streamlit. This Streamlit app is then containerized using docker and deployed to a virtual machine on AWS using EC2. This EC2 instance is then accessed from a custom domain name that is being hosted on a Cloudflare DNS server.;false;https://github.com/cogentdom/Docker_VPS_App
